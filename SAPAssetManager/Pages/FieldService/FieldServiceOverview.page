{
	"Caption": "$(L,app_display_name)",
	"OnReturning": "/SAPAssetManager/Rules/OverviewPage/FSMOverviewOnPageReturning.js",
	"ActionBar": {
		"Items": [
			"/SAPAssetManager/Pages/Fragments/SyncButton.fragment",
			{
				"Position": "Right",
				"_Name": "AutoSync",
				"Caption": "AutoSync",
				"IconText": "SyncIcon",
				"Icon": "$(PLT, /SAPAssetManager/Images/auto-sync.pdf, /SAPAssetManager/Images/auto-sync.android.png)",
				"OnPress": "/SAPAssetManager/Rules/ApplicationEvents/ApplicationOnSync.js",
				"Visible": "/SAPAssetManager/Rules/Sync/IsAutoSyncInProgress.js"
			}
		]
	},
	"Controls": [
		{
			"Sections": [
				{
					"_Type": "Section.Type.KPIHeader",
					"_Name": "KPIHeader",
					"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsServiceItemKPIVisible.js",
					"KPIHeader": {
						"KPIItems": [
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersReceivedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersReceivedView.js",
								"CaptionLabel": "$(L, not_accepted)"
							},
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersAcceptedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersAcceptedView.js",
								"CaptionLabel": "$(L, not_started)"
							},
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersStartedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersStartedView.js",
								"CaptionLabel": "$(L, in_progress)"
							},
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersFinishedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersFinishedView.js",
								"CaptionLabel": "$(L, completed)"
							}
						]
					},
					"DataSubscriptions": [
						"PMMobileStatuses"
					]
				},
				{
					"_Type": "Section.Type.KPIHeader",
					"_Name": "KPIHeaderForWO",
					"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsServiceOrderKPIVisible.js",
					"KPIHeader": {
						"KPIItems": [
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersAcceptedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersAcceptedView.js",
								"CaptionLabel": "$(L, not_started)"
							},
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersStartedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersStartedView.js",
								"CaptionLabel": "$(L, in_progress)"
							},
							{
								"MetricItems": [
									{
										"Value": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersFinishedCount.js"
									}
								],
								"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersFinishedView.js",
								"CaptionLabel": "$(L, completed)"
							}
						]
					},
					"DataSubscriptions": [
						"PMMobileStatuses"
					]
				},
				{
					"_Type": "Section.Type.FormCell",
					"Controls": [
						{
							"_Type": "Control.Type.FormCell.DatePicker",
							"_Name": "ActualDate",
							"Caption": "$(L, work_overview_for)",
							"Mode": "Date",
							"Value": "/SAPAssetManager/Rules/ServiceOrders/TodaysServiceOrderDate.js",
							"OnValueChange": "/SAPAssetManager/Rules/ServiceOrders/ActualDateChanges.js"
						}
					]
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/ServiceOrders/ServiceOrdersObjectTable.fragment",
					"Properties": {
						"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsS4ServiceOrderSectionVisible.js",
						"Header": {
							"UseTopPadding": true,
							"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderInfo.js"
						},
						"MaxItemCount": 3,
						"Footer": {
							"Caption": "$(L,see_all)",
							"AccessoryType": "disclosureIndicator",
							"AttributeLabel": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersDateFilter.js",
							"FooterStyle": "attribute",
							"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersDateView.js"
						},
						"Target": {
							"QueryOptions": "/SAPAssetManager/Rules/ServiceOrders/ServiceOrderTodayList.js"
						}
					}
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/ServiceOrders/ServiceItemsObjectTable.fragment",
					"Properties": {
						"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsS4ServiceItemSectionVisible.js",
						"Header": {
							"UseTopPadding": true,
							"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderInfo.js"
						},
						"MaxItemCount": 3,
						"Target": {
							"QueryOptions": "/SAPAssetManager/Rules/ServiceOrders/ServiceItemsTodayList.js"
						},
						"Footer": {
							"Caption": "$(L,see_all)",
							"AccessoryType": "disclosureIndicator",
							"AttributeLabel": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceItemsDateFilter.js",
							"FooterStyle": "attribute",
							"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceItemsDateView.js"
						}
					}
				},
				{
					"_Type": "Section.Type.ObjectTable",
					"_Name": "ServiceOrders",
					"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsServiceOrderSectionVisible.js",
					"Header": {
						"UseTopPadding": true,
						"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderInfo.js"
					},
					"EmptySection": {
						"Caption": "$(L, no_serviceorders_available)"
					},
					"MaxItemCount": 2,
					"ObjectCell": {
						"Title": "#Property:OrderDescription",
						"Subhead": "{OrderId}",
						"AccessoryType": "disclosureIndicator",
						"Footnote": "/SAPAssetManager/Rules/DateTime/ContractDatePeriod.js",
						"StatusText": "#Property:WOPriority/#Property:PriorityDescription",
						"SubstatusText": "/SAPAssetManager/Rules/WorkOrders/ListView/WorkOrdersListViewFormat.js",
						"Styles": {
							"SubstatusText": "/SAPAssetManager/Rules/Supervisor/Reject/RejectedStatusStyle.js"
						},
						"OnPress": "/SAPAssetManager/Rules/WorkOrders/WorkOrderDetailsNav.js",
						"PreserveIconStackSpacing": false,
						"ContextMenu": {
							"PerformFirstActionWithFullSwipe": true,
							"Items": "/SAPAssetManager/Rules/ContextMenuTable.js",
							"LeadingItems": "/SAPAssetManager/Rules/ContextMenuLeadingItems.js",
							"TrailingItems": "/SAPAssetManager/Rules/ContextMenuTrailingItems.js"
						}
					},
					"Target": {
						"EntitySet": "MyWorkOrderHeaders",
						"Service": "/SAPAssetManager/Services/AssetManager.service",
						"QueryOptions": "/SAPAssetManager/Rules/ServiceOrders/WorkOrderTodayList.js"
					},
					"Footer": {
						"Caption": "$(L,see_all)",
						"AccessoryType": "disclosureIndicator",
						"AttributeLabel": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceOrdersDateFilter.js",
						"FooterStyle": "attribute",
						"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceOrdersDateView.js"
					},
					"DataSubscriptions": [
						"MyWorkOrderHeaders",
						"PMMobileStatuses",
						"WorkOrderTransfers"
					]
				},
				{
					"_Type": "Section.Type.ObjectTable",
					"_Name": "ServiceOperations",
					"Visible": "/SAPAssetManager/Rules/ServiceOrders/IsServiceOperationSectionVisible.js",
					"Header": {
						"UseTopPadding": true,
						"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderInfo.js"
					},
					"EmptySection": {
						"Caption": "$(L, no_operations_available)"
					},
					"MaxItemCount": 2,
					"ObjectCell": {
						"Title": "{OperationShortText}",
						"Subhead": "{OrderId} - {OperationNo}",
						"AccessoryType": "disclosureIndicator",
						"Footnote": "/SAPAssetManager/Rules/DateTime/ContractDatePeriod.js",
						"SubstatusText": "/SAPAssetManager/Rules/WorkOrders/Operations/WorkOrderOperationsListViewFormat.js",
						"Styles": {
							"SubstatusText": "/SAPAssetManager/Rules/Supervisor/Reject/RejectedStatusStyle.js"
						},
						"OnPress": "/SAPAssetManager/Rules/WorkOrders/Operations/Details/WorkOrderOperationDetailsNav.js",
						"PreserveIconStackSpacing": false,
						"ContextMenu": {
							"PerformFirstActionWithFullSwipe": true,
							"Items": "/SAPAssetManager/Rules/ContextMenuTable.js",
							"LeadingItems": "/SAPAssetManager/Rules/ContextMenuLeadingItems.js",
							"TrailingItems": "/SAPAssetManager/Rules/ContextMenuTrailingItems.js"
						}
					},
					"Target": {
						"EntitySet": "MyWorkOrderOperations",
						"Service": "/SAPAssetManager/Services/AssetManager.service",
						"QueryOptions": "/SAPAssetManager/Rules/ServiceOrders/ServiceOperationsTodayList.js"
					},
					"Footer": {
						"Caption": "$(L,see_all)",
						"AccessoryType": "disclosureIndicator",
						"AttributeLabel": "/SAPAssetManager/Rules/ServiceOrders/Count/ServiceItemsDateFilter.js",
						"FooterStyle": "attribute",
						"OnPress": "/SAPAssetManager/Rules/ServiceOrders/ListView/ServiceItemsDateView.js"
					},
					"DataSubscriptions": [
						"MyWorkOrderOperations",
						"PMMobileStatuses",
						"WorkOrderTransfers"
					]
				},
				{
					"_Type": "Section.Type.ButtonTable",
					"Visible": false,
					"Header": {
						"Caption": "$(L, vehicle)"
					},
					"Buttons": [
						{
							"Title": "$(L, check_in_vehicle)",
							"Alignment": "Center",
							"ButtonType": "Text",
							"Semantic": "Tint"
						}
					]
				},
				{
					"_Type": "Section.Type.ObjectCollection",
					"Layout": {
						"NumberOfColumns": 1,
						"MinimumInteritemSpacing": "$(PLT,66,0)"
					},
					"_Name": "TimeCaptureSection",
					"Visible": "/SAPAssetManager/Rules/SideDrawer/EnableTimeRecords.js",
					"MaxItemCount": 2,
					"Header": {
						"Caption": "$(L,time_records)"
					},
					"EmptySection": {
						"Caption": "$(L, no_time_records)"
					},
					"ObjectCell": {
						"PreserveIconStackSpacing": false,
						"Icons": "/SAPAssetManager/Rules/OverviewPage/FSMOverviewPageOverviewRowIcon.js",
						"Title": "/SAPAssetManager/Rules/Confirmations/OverviewListView/FormattedPostingDate.js",
						"Subhead": "/SAPAssetManager/Rules/Confirmations/ConfirmationTotalDuration.js",
						"AccessoryType": "disclosureIndicator",
						"OnPress": "/SAPAssetManager/Actions/Confirmations/ConfirmationsListViewNav.action"
					},
					"Target": {
						"EntitySet": "ConfirmationOverviewRows",
						"Service": "/SAPAssetManager/Services/AssetManager.service",
						"QueryOptions": "/SAPAssetManager/Rules/ServiceOrders/TimeRecordsQuery.js"
					},
					"Footer": {
						"Caption": "$(L,see_all)",
						"AccessoryType": "disclosureIndicator",
						"AttributeLabel": "/SAPAssetManager/Rules/OverviewPage/TimeCaptureSection/TimeCaptureSectionCount.js",
						"FooterStyle": "attribute",
						"OnPress": "/SAPAssetManager/Actions/Confirmations/ConfirmationsOverviewListViewNav.action"
					},
					"DataSubscriptions": [
						"ConfirmationOverviewRows",
						"MyWorkOrderHeaders",
						"Confirmations"
					]
				},
				{
					"Header": {
						"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderMapInfo.js"
					},
					"Module": "extension-MapFramework",
					"Control": "MapViewExtension",
					"Class": "MapViewExtension",
					"Height": 240,
					"ExtensionProperties": {
						"Config": "/SAPAssetManager/Pages/Fragments/Map/MapConfigNoUserInteraction.fragment",
						"TokenAuthentication": {
							"Action": "/SAPAssetManager/Rules/Extensions/TokenRequest.js"
						},
						"MapToolsetIcons": [],
						"BusinessObjects": [
							{
								"Type": "RouteStop",
								"Title": "$(L,fow_dl_service_orders)",
								"Legend": "MarkerJob",
								"Target": {
									"EntitySet": "MyWorkOrderHeaders",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "/SAPAssetManager/Rules/Maps/FSMOverviewMapQueryOptions.js",
									"Properties": [],
									"KeyProperties": []
								},
								"Enable": true,
								"ObjectScheme": {
									"Geometry": "/SAPAssetManager/Rules/Maps/AddressMapValue.js",
									"Layer": "RouteStop",
									"Properties": {
										"ID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteIDStopID.js",
										"RouteID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteID.js",
										"StopID": "{OrderId}"
									},
									"Actions": [],
									"Symbol": {
										"marker": "/SAPAssetManager/Rules/Maps/Icons/WorkOrderIcon.js",
										"lineColor": "0070F2",
										"fillColor": "0070F233",
										"lineWidth": 2
									}
								}
							},
							{
								"Type": "Route",
								"DependsOn": "RouteStop",
								"Title": "$(L, fow_dl_routes)",
								"Legend": "MarkerRoute",
								"Target": {
									"EntitySet": "MyWorkOrderHeaders",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "/SAPAssetManager/Rules/Maps/FSMOverviewRouteMapQueryOptions.js",
									"Properties": [],
									"KeyProperties": []
								},
								"Enable": true,
								"ObjectScheme": {
									"Geometry": "",
									"Layer": "Route",
									"Properties": {
										"ID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteID.js"
									},
									"DependsOn": "RouteStop",
									"Actions": [],
									"Symbol": {
										"lineColor": "4BC3F3",
										"lineWidth": 5,
										"lineStyle": "solid"
									}
								}
							}
						]
					},
					"OnPress": "/SAPAssetManager/Actions/Extensions/FSMMapNav.action",
					"Visible": "/SAPAssetManager/Rules/Maps/IsGISEnabled.js",
					"_Name": "MapExtensionSection",
					"_Type": "Section.Type.Extension"
				},
				{
					"Header": {
						"Caption": "/SAPAssetManager/Rules/ServiceOrders/HeaderInfo/HeaderMapInfo.js"
					},
					"Module": "extension-MapFramework",
					"Control": "MapViewExtension",
					"Class": "MapViewExtension",
					"Height": 240,
					"ExtensionProperties": {
						"Config": "/SAPAssetManager/Pages/Fragments/Map/MapConfigNoUserInteraction.fragment",
						"TokenAuthentication": {
							"Action": "/SAPAssetManager/Rules/Extensions/TokenRequest.js"
						},
						"MapToolsetIcons": [],
						"BusinessObjects": [
							{
								"Type": "RouteStop",
								"Title": "$(L,fow_dl_service_orders)",
								"Legend": "MarkerJob",
								"Target": {
									"EntitySet": "S4ServiceOrders",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "/SAPAssetManager/Rules/Maps/S4OverviewMapQueryOptions.js",
									"Properties": [],
									"KeyProperties": []
								},
								"Enable": true,
								"ObjectScheme": {
									"Geometry": "/SAPAssetManager/Rules/Maps/AddressMapValue.js",
									"Layer": "RouteStop",
									"Properties": {
										"ID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteIDStopID.js",
										"RouteID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteID.js",
										"StopID": "{ObjectID}"
									},
									"Actions": [],
									"Symbol": {
										"marker": "/SAPAssetManager/Rules/Maps/Icons/WorkOrderIcon.js",
										"lineColor": "0070F2",
										"fillColor": "0070F233",
										"lineWidth": 2
									}
								}
							},
							{
								"Type": "Route",
								"DependsOn": "RouteStop",
								"Title": "$(L, fow_dl_routes)",
								"Legend": "MarkerRoute",
								"Target": {
									"EntitySet": "S4ServiceOrders",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "/SAPAssetManager/Rules/Maps/S4RouteOverviewMapQueryOptions.js",
									"Properties": [],
									"KeyProperties": []
								},
								"Enable": true,
								"ObjectScheme": {
									"Geometry": "",
									"Layer": "Route",
									"Properties": {
										"ID": "/SAPAssetManager/Rules/WorkOrders/WorkOrderRouteID.js"
									},
									"DependsOn": "RouteStop",
									"Actions": [],
									"Symbol": {
										"lineColor": "4BC3F3",
										"lineWidth": 5,
										"lineStyle": "solid"
									}
								}
							}
						]
					},
					"OnPress": "/SAPAssetManager/Actions/Extensions/FSMS4MapNav.action",
					"Visible": "/SAPAssetManager/Rules/Maps/IsS4GISEnabled.js",
					"_Name": "S4MapExtensionSection",
					"_Type": "Section.Type.Extension"
				}
			],
			"_Name": "FieldServiceSectionedTable",
			"_Type": "Control.Type.SectionedTable"
		}
	],
	"_Name": "FieldServiceOverview",
	"_Type": "Page",
	"PrefersLargeCaption": true
}