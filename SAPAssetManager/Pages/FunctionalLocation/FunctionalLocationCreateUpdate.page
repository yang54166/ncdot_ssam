{
	"OnLoaded": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateOnPageLoad.js",
	"ActionBar": {
		"Items": [
			{
				"Position": "Left",
				"SystemItem": "Cancel",
				"OnPress": "/SAPAssetManager/Rules/Common/CheckForChangesBeforeCancel.js"
			},
			{
				"Position": "Right",
				"SystemItem": "$(PLT,'Done','')",
				"Caption": "/SAPAssetManager/Rules/Common/Platform/DoneText.js",
				"OnPress": "/SAPAssetManager/Actions/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateRequired.action"
			}
		]
	},
	"Controls": [
		{
			"Sections": [
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection1",
					"Controls": [
						{
							"_Name": "CreateFromLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, create_from)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"Search": {
								"Enabled": false
							},
							"IsVisible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateVisibility.js",
							"PickerItems": "/SAPAssetManager/Rules/Common/Controls/Items/CreateFromItems.js",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Controls/Handlers/CreateFromValueChanged.js"
						},
						{
							"_Name": "CategoryLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, category)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:FuncLocCategoryDesc}}",
								"ReturnValue": "{FuncLocCategory}",
								"Target": {
									"EntitySet": "FuncLocCategories",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"IsEditable": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/CategoryValueEditable.js",
							"Value": "{FuncLocType}",
							"OnValueChange": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/CategoryValueChanged.js"
						},
						{
							"_Name": "TemplateLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, template)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": false,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"IsVisible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/TemplateVisibility.js",
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:FuncLocId}}",
								"ReturnValue": "{FuncLocIdIntern}",
								"Target": {
									"EntitySet": "FuncLocTemplates",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{CopyFuncLocIdIntern}",
							"IsEditable": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateVisibility.js",
							"OnValueChange": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/TemplateValueChanged.js"
						},
						{
							"_Name": "ReferenceLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, functional_location)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": false,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:FuncLocId}} - {{#Property:FuncLocDesc}}",
								"ReturnValue": "{FuncLocIdIntern}",
								"Target": {
									"EntitySet": "MyFunctionalLocations",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "$filter=sap.islocal()"
								}
							},
							"Value": "{CopyFuncLocIdIntern}",
							"IsVisible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/ReferenceVisibility.js",
							"IsEditable": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateVisibility.js",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Controls/Handlers/ReferenceValueChanged.js"
						}
					]
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/Location/LocationFormCellControl.fragment",
					"Properties": {
						"Controls": [
							{
								"Value": "/SAPAssetManager/Rules/FunctionalLocation/FunctionalLocationLocationFormat.js"
							}
						]
					}
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/Location/LocationFormCellButtons.fragment",
					"Properties": {
						"Buttons": [
							{
								"OnPress": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationGetCurrentLocation.js"
							},
							{
								"OnPress": "/SAPAssetManager/Rules/FunctionalLocation/FunctionalLocationMapNav.js"
							},
							{
								"OnPress": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationDeleteGeometry.js",
								"Visible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationDeleteGeometryAllowed.js"
							}
						]
					}
				},
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection2",
					"Controls": [
						{
							"_Name": "StrcutureIndLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, structure_ind)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:FuncLocStructInd}} - {{#Property:FuncLocStructIndDesc}}",
								"ReturnValue": "{FuncLocStructInd}",
								"Target": {
									"EntitySet": "FuncLocStructInds",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{FuncLocStructInd}",
							"OnValueChange": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/StructureValueChanged.js"
						},
						{
							"_Name": "IdProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"Value": "{FuncLocId}",
							"OnValueChange": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/IdValueChanged.js",
							"Caption": "$(L,ID)",
							"IsEditable": false
						},
						{
							"_Name": "DescriptionNote",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L,description)",
							"Caption": "$(L,description)",
							"Value": "{FuncLocDesc}",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Validation/ResetValidationOnInput.js",
							"IsAutoResizing": true
						},
						{
							"_Name": "MaintenacePlantLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, maintenance_plant)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": false,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:PlanningPlant}} - {{#Property:PlantDescription}}",
								"ReturnValue": "{PlanningPlant}",
								"Target": {
									"EntitySet": "Plants",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"Value": "{MaintPlant}",
							"OnValueChange": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/PlantValueChanged.js"
						},
						{
							"_Type": "Control.Type.FormCell.Extension",
							"Module": "extension-HierarchyFramework",
							"Control": "HierarchyExtension",
							"Class": "HierarchyExtension",
							"_Name": "SuperiorFuncLocHierarchyExtensionControl",
							"Caption": "$(L,superior_floc)",
							"DataSubscriptions": [
								"MyFunctionalLocations"
							],
							"ExtensionProperties": {
								"IsPicker": true,
								"Search": {
									"Enabled": true,
									"Delay": 500,
									"MinimumCharacterThreshold": 3,
									"Placeholder": "$(L,search)",
									"BarcodeScanner": true
								},
								"PickerProperties": {
									"ListFilter": "MyFunctionalLocations",
									"Caption": "$(L,superior_floc)",
									"AllowMultipleSelection": false,
									"ItemsPerPage": 50,
									"CachedItemsToLoad": 20,
									"OnLoaded": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/FLOCHierarchyListPickerOnLoaded.js"
								},
								"HierarchyList": [],
								"BusinessObjects": [
									{
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/FLOCHierarchyListPickerQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										},
										"Properties": {
											"ID": "{@odata.readLink}",
											"Title": "{FuncLocDesc}",
											"Subhead": "{FuncLocId}",
											"Footnote": "$(L, functional_location)",
											"ReturnValue": "{FuncLocIdIntern}",
											"DisplayValue": "{FuncLocId} - {FuncLocDesc}",
											"ChildCount": "/SAPAssetManager/Rules/HierarchyControl/ChildCountListPicker.js",
											"Parent": [
												{
													"Target": {
														"EntitySet": "MyFunctionalLocations",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=FuncLocIdIntern eq '{SuperiorFuncLocInternId}'&$orderby=FuncLocId"
													}
												}
											],
											"Children": [
												{
													"Target": {
														"EntitySet": "MyFunctionalLocations",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=SuperiorFuncLocInternId eq '{FuncLocIdIntern}'&$orderby=FuncLocId"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"_Name": "StartDatePicker",
							"_Type": "Control.Type.FormCell.DatePicker",
							"Caption": "$(L, start_date)",
							"Mode": "Date",
							"Value": "{StartDate}"
						},
						{
							"_Name": "ManufactureNameProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, manufacturer)",
							"Caption": "$(L, manufacturer_name)",
							"Value": "{Manufacturer}"
						},
						{
							"_Name": "ManufactureDatePicker",
							"_Type": "Control.Type.FormCell.DatePicker",
							"Caption": "$(L, manufacture_date)",
							"Mode": "Date",
							"Value": "/SAPAssetManager/Rules/Common/Controls/Data/ManufactureDate.js"
						},
						{
							"_Name": "ModelNumberProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, model_number)",
							"Caption": "$(L, model_number)",
							"AlternateInput": "Barcode",
							"Value": "{ModelNumber}"
						},
						{
							"_Name": "SerialNumberProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, serial_number)",
							"Caption": "$(L, serial_number)",
							"AlternateInput": "Barcode",
							"Value": "{SerialNumber}"
						},
						{
							"_Name": "LocationLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, plant_location)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": false,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:LocationName}}",
								"ReturnValue": "{@odata.readLink}",
								"Target": {
									"EntitySet": "Locations",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"IsEditable": false
						},
						{
							"_Name": "RoomProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, room)",
							"Value": "{Room}",
							"Caption": "$(L, room)"
						}
					]
				},
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection3",
					"Controls": [
						{
							"Caption": "$(L, note)",
							"_Name": "LongTextNote",
							"IsVisible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FunctionalLocationCreateUpdateVisibility.js",
							"_Type": "Control.Type.FormCell.Note",
							"PlaceHolder": "$(L, note)",
							"IsAutoResizing": true
						}
					]
				},
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection4",
					"Controls": [
						{
							"Caption": "$(L, attachment_description)",
							"PlaceHolder": "$(L,attachment_description)",
							"IsEditable": true,
							"IsVisible": "/SAPAssetManager/Rules/Documents/DocumentsIsVisible.js",
							"_Name": "AttachmentDescription",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Validation/FormCellNoteValidation.js",
							"_Type": "Control.Type.FormCell.SimpleProperty"
						},
						{
							"_Type": "Fragment",
							"Fragment": "/SAPAssetManager/Pages/Fragments/Documents/DocumentFormCell.fragment",
							"Properties": {
								"Value": "/SAPAssetManager/Rules/Documents/InitializeAttachments.js",
								"OnValueChange": "/SAPAssetManager/Rules/Documents/DocumentEditorAttachmentOnValueChange.js",
								"IsVisible": "/SAPAssetManager/Rules/Documents/DocumentsIsVisible.js"
							}
						}
					]
				},
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection5",
					"Controls": [
						{
							"_Name": "IncludeFormReferenceLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, include_from_reference_floc)",
							"AllowMultipleSelection": true,
							"IsVisible": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/TemplateVisibility.js",
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"Value": "/SAPAssetManager/Rules/FunctionalLocation/CreateUpdate/FormCellHandlers/DefaultValue.js",
							"PickerItems": "/SAPAssetManager/Rules/Common/Controls/Items/ReferenceItems.js",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Controls/Handlers/ReferenceItemsValueChanged.js"
						}
					]
				},
				{
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection6",
					"Controls": [
						{
							"_Name": "DiscardButton",
							"_Type": "Control.Type.FormCell.Button",
							"Title": "$(L,discard)",
							"ButtonType": "Text",
							"Semantic": "Tint",
							"OnPress": "/SAPAssetManager/Rules/Common/DiscardAction.js",
							"IsVisible": "/SAPAssetManager/Rules/Common/IsDiscardButtonVisible.js",
							"Alignment": "/SAPAssetManager/Rules/Common/Platform/ModalButtonAlign.js"
						}
					]
				}
			],
			"_Name": "FormCellContainer",
			"_Type": "Control.Type.SectionedTable"
		}
	],
	"_Type": "Page",
	"_Name": "FunctionalLocationCreateUpdatePage",
	"PrefersLargeCaption": true
}