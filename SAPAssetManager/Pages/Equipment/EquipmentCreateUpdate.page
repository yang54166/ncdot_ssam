{
	"OnLoaded": "/SAPAssetManager/Rules/Equipment/CreateUpdate/EqipmentCreateUpdateOnPageLoad.js",
	"ActionBar": {
		"Items": [
			{
				"Position": "Left",
				"SystemItem": "Cancel",
				"OnPress": "/SAPAssetManager/Rules/Common/CheckForChangesBeforeCancel.js"
			},
			{
				"Position": "Right",
				"SystemItem": "$(PLT,'Done','')",
				"Caption": "/SAPAssetManager/Rules/Common/Platform/DoneText.js",
				"OnPress": "/SAPAssetManager/Actions/Equipment/CreateUpdate/EquipmentCreateUpdateRequired.action"
			}
		]
	},
	"Controls": [
		{
			"Sections": [
				{
					"Controls": [
						{
							"_Name": "CreateFromLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, create_from)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"Search": {
								"Enabled": false
							},
							"PickerItems": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/CreateFromItems.js",
							"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/CreateFromValueChanged.js"
						},
						{
							"_Name": "CategoryLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, category)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"IsVisible": false,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:EquipCategoryDesc}}",
								"ReturnValue": "{EquipCategory}",
								"Target": {
									"EntitySet": "EquipmentCategories",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/CategoryValueChanged.js"
						},
						{
							"_Name": "TemplateLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, template)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"IsVisible": false,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:EquipId}}",
								"ReturnValue": "{EquipId}",
								"Target": {
									"EntitySet": "EquipTemplates",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/TemplateValueChanged.js"
						},
						{
							"_Name": "ReferenceLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, equipment)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/ReferenceEquipAllowDefaultValue.js",
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"IsVisible": false,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:EquipId}} - {{#Property:EquipDesc}}",
								"ReturnValue": "{EquipId}",
								"Target": {
									"EntitySet": "MyEquipments",
									"Service": "/SAPAssetManager/Services/AssetManager.service",
									"QueryOptions": "$filter=sap.islocal()&$orderby=EquipId"
								}
							},
							"OnValueChange": "/SAPAssetManager/Rules/Common/Controls/Handlers/ReferenceValueChanged.js"
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection1"
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/Location/LocationFormCellControl.fragment",
					"Properties": {
						"Controls": [
							{
								"Value": "/SAPAssetManager/Rules/Equipment/EquipmentLocationFormat.js"
							}
						]
					}
				},
				{
					"_Type": "Fragment",
					"Fragment": "/SAPAssetManager/Pages/Location/LocationFormCellButtons.fragment",
					"Properties": {
						"Buttons": [
							{
								"OnPress": "/SAPAssetManager/Rules/Equipment/CreateUpdate/EquipmentGetCurrentLocation.js"
							},
							{
								"OnPress": "/SAPAssetManager/Rules/Equipment/EquipmentMapNav.js"
							},
							{
								"OnPress": "/SAPAssetManager/Rules/Equipment/CreateUpdate/EquipmentDeleteGeometry.js",
								"Visible": "/SAPAssetManager/Rules/Equipment/CreateUpdate/EquipmentDeleteGeometryAllowed.js"
							}
						]
					}
				},
				{
					"Controls": [
						{
							"_Name": "IdProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"Caption": "$(L,ID)",
							"Value": "/SAPAssetManager/Rules/Equipment/CreateUpdate/GetEquipmentId.js",
							"IsEditable": false
						},
						{
							"_Name": "DescriptionNote",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L,description)",
							"Caption": "$(L,description)",
							"IsAutoResizing": true,
							"OnValueChange": "/SAPAssetManager/Rules/Common/Validation/ResetValidationOnInput.js"
						},
						{
							"_Name": "MaintenacePlantLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, maintenance_plant)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:PlanningPlant}} - {{#Property:PlantDescription}}",
								"ReturnValue": "{PlanningPlant}",
								"Target": {
									"EntitySet": "Plants",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							},
							"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/PlantValueChanged.js"
						},
						{
							"_Type": "Control.Type.FormCell.Extension",
							"Module": "extension-HierarchyFramework",
							"Control": "HierarchyExtension",
							"Class": "HierarchyExtension",
							"Caption": "$(L,functional_location)",
							"_Name": "FuncLocHierarchyExtensionControl",
							"DataSubscriptions": [
								"MyFunctionalLocations"
							],
							"ExtensionProperties": {
								"IsPicker": true,
								"Search": {
									"Enabled": true,
									"Delay": 500,
									"MinimumCharacterThreshold": 3,
									"Placeholder": "$(L,search)",
									"BarcodeScanner": true
								},
								"PickerProperties": {
									"ListFilter": "MyFunctionalLocations",
									"Caption": "$(L,functional_location)",
									"AllowMultipleSelection": false,
									"ItemsPerPage": 50,
									"CachedItemsToLoad": 20,
									"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCelllHandlers/HierarchyListPickerValueChanged.js",
									"OnLoaded": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/EquipmentHierarchyListPickerOnLoaded.js"
								},
								"HierarchyList": [],
								"BusinessObjects": [
									{
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/FLOCHierarchyListPickerQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										},
										"Properties": {
											"ID": "{@odata.readLink}",
											"Title": "{FuncLocDesc}",
											"Subhead": "{FuncLocId}",
											"Footnote": "$(L, functional_location)",
											"ReturnValue": "{FuncLocIdIntern}",
											"DisplayValue": "{FuncLocId} - {FuncLocDesc}",
											"ChildCount": "/SAPAssetManager/Rules/HierarchyControl/ChildCountListPicker.js",
											"Parent": [
												{
													"Target": {
														"EntitySet": "MyFunctionalLocations",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=FuncLocIdIntern eq '{SuperiorFuncLocInternId}'&$orderby=FuncLocId"
													}
												}
											],
											"Children": [
												{
													"Target": {
														"EntitySet": "MyFunctionalLocations",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=SuperiorFuncLocInternId eq '{FuncLocIdIntern}'&$orderby=FuncLocId"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"_Type": "Control.Type.FormCell.Extension",
							"Module": "extension-HierarchyFramework",
							"Control": "HierarchyExtension",
							"Class": "HierarchyExtension",
							"_Name": "EquipHierarchyExtensionControl",
							"Caption": "$(L, superior_equipment)",
							"DataSubscriptions": [
								"MyEquipments"
							],
							"ExtensionProperties": {
								"IsPicker": true,
								"Search": {
									"Enabled": true,
									"Delay": 500,
									"MinimumCharacterThreshold": 3,
									"Placeholder": "$(L,search)",
									"BarcodeScanner": true
								},
								"PickerProperties": {
									"OnLoaded": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/EquipmentHierarchyListPickerOnLoaded.js",
									"OnValueChange": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCelllHandlers/HierarchyListPickerValueChanged.js",
									"ListFilter": "MyEquipments",
									"AllowMultipleSelection": false,
									"Caption": "$(L,superior_equipment)",
									"ItemsPerPage": 50,
									"CachedItemsToLoad": 20
								},
								"HierarchyList": [],
								"BusinessObjects": [
									{
										"Target": {
											"EntitySet": "MyEquipments",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/EquipHierarchyExtensionControlQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										},
										"Properties": {
											"ID": "{@odata.readLink}",
											"Title": "{EquipDesc}",
											"Subhead": "{EquipId}",
											"Footnote": "$(L, equipment)",
											"ReturnValue": "{EquipId}",
											"DisplayValue": "{EquipId} - {EquipDesc}",
											"ChildCount": "/SAPAssetManager/Rules/HierarchyControl/ChildCountListPicker.js",
											"Parent": [
												{
													"Target": {
														"EntitySet": "MyEquipments",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=EquipId eq '{SuperiorEquip}'&$orderby=EquipId"
													}
												}
											],
											"Children": [
												{
													"Target": {
														"EntitySet": "MyEquipments",
														"Service": "/SAPAssetManager/Services/AssetManager.service",
														"Properties": [],
														"KeyProperties": [],
														"QueryOptions": "$filter=SuperiorEquip eq '{EquipId}'&$orderby=EquipId"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"_Name": "StartDatePicker",
							"_Type": "Control.Type.FormCell.DatePicker",
							"Caption": "$(L, start_date)",
							"Mode": "Date"
						},
						{
							"_Name": "ManufactureNameProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, manufacturer)",
							"Caption": "$(L, manufacturer)"
						},
						{
							"_Name": "ManufactureDatePicker",
							"_Type": "Control.Type.FormCell.DatePicker",
							"Caption": "$(L, manufacture_date)",
							"Mode": "Date",
							"Value": "/SAPAssetManager/Rules/Common/Controls/Data/ManufactureDate.js"
						},
						{
							"_Name": "ModelNumberProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, model_number)",
							"Caption": "$(L, model_number)",
							"AlternateInput": "Barcode"
						},
						{
							"_Name": "SerialNumberProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, serial_number)",
							"Caption": "$(L, serial_number)",
							"AlternateInput": "Barcode"
						},
						{
							"_Name": "LocationLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, plant_location)",
							"AllowMultipleSelection": false,
							"AllowDefaultValueIfOneItem": true,
							"IsPickerDismissedOnSelection": true,
							"IsSearchCancelledAfterSelection": true,
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": {
								"DisplayValue": "{{#Property:LocationName}}",
								"ReturnValue": "{@odata.readLink}",
								"Target": {
									"EntitySet": "Locations",
									"Service": "/SAPAssetManager/Services/AssetManager.service"
								}
							}
						},
						{
							"_Name": "RoomProperty",
							"_Type": "Control.Type.FormCell.SimpleProperty",
							"PlaceHolder": "$(L, room)",
							"Caption": "$(L, room)"
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection3"
				},
				{
					"Controls": [
						{
							"Caption": "$(L, note)",
							"_Name": "LongTextNote",
							"IsVisible": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/LongTextVisibility.js",
							"_Type": "Control.Type.FormCell.Note",
							"PlaceHolder": "$(L, note)",
							"IsAutoResizing": true
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection4"
				},
				{
					"Controls": [
						{
							"Caption": "$(L, attachment_description)",
							"PlaceHolder": "$(L,attachment_description)",
							"IsEditable": true,
							"IsVisible": "/SAPAssetManager/Rules/Documents/DocumentsIsVisible.js",
							"_Name": "AttachmentDescription",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Validation/FormCellNoteValidation.js",
							"_Type": "Control.Type.FormCell.SimpleProperty"
						},
						{
							"_Type": "Fragment",
							"Fragment": "/SAPAssetManager/Pages/Fragments/Documents/DocumentFormCell.fragment",
							"Properties": {
								"Value": "/SAPAssetManager/Rules/Documents/InitializeAttachments.js",
								"OnValueChange": "/SAPAssetManager/Rules/Documents/DocumentEditorAttachmentOnValueChange.js",
								"IsVisible": "/SAPAssetManager/Rules/Documents/DocumentsIsVisible.js"
							}
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection5"
				},
				{
					"Controls": [
						{
							"_Name": "IncludeFormReferenceLstPkr",
							"_Type": "Control.Type.FormCell.ListPicker",
							"Caption": "$(L, include_from_reference_equipment)",
							"AllowMultipleSelection": true,
							"IsVisible": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/TemplateVisibility.js",
							"Search": {
								"Enabled": true,
								"Delay": 500,
								"MinimumCharacterThreshold": 3,
								"Placeholder": "$(L,search)",
								"BarcodeScanner": false
							},
							"PickerItems": "/SAPAssetManager/Rules/Equipment/CreateUpdate/FormCellHandlers/Items/ReferenceItems.js",
							"OnValueChange": "/SAPAssetManager/Rules/Common/Controls/Handlers/ReferenceItemsValueChanged.js"
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection6"
				},
				{
					"Controls": [
						{
							"_Name": "DiscardButton",
							"_Type": "Control.Type.FormCell.Button",
							"Title": "$(L,discard)",
							"ButtonType": "Text",
							"Semantic": "Tint",
							"OnPress": "/SAPAssetManager/Rules/Common/DiscardAction.js",
							"IsVisible": "/SAPAssetManager/Rules/Common/IsDiscardButtonVisible.js",
							"Alignment": "/SAPAssetManager/Rules/Common/Platform/ModalButtonAlign.js"
						}
					],
					"_Type": "Section.Type.FormCell",
					"_Name": "FormCellSection7"
				}
			],
			"_Type": "Control.Type.SectionedTable",
			"_Name": "FormCellContainer"
		}
	],
	"_Type": "Page",
	"_Name": "EquipmentCreateUpdatePage",
	"PrefersLargeCaption": true
}