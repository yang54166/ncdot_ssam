{
	"Caption": "$(L,map)",
	"Controls": [
		{
			"_Type": "Control.Type.Extension",
			"Module": "extension-MapFramework",
			"Control": "MapExtensionWithContext",
			"Class": "MapExtensionWithContext",
			"_Name": "MapExtensionControl",
			"ExtensionProperties": {
				"Config": "/SAPAssetManager/Pages/Fragments/Map/FOWMapConfig.fragment",
				"TokenAuthentication": {
					"Action": "/SAPAssetManager/Rules/Extensions/TokenRequest.js"
				},
				"MapToolsetIcons": "/SAPAssetManager/Pages/Fragments/Map/MapToolsetIcons.fragment",
				"SettingsControl": "/SAPAssetManager/Pages/Fragments/Map/MapSettingsControlSimple.fragment",
				"SearchControl": {
					"SearchPlaceholder": "$(L, map_search_placeholder)",
					"SearchFields": [
						"Title",
						"Footnote",
						"Subhead",
						"Description"
					],
					"IsResultTextDisplayed": true,
					"ResultsPrefix": "$(L, map_search_results_pref)",
					"ResultsSuffix": "$(L, map_search_results_sufx)",
					"NearMeFilterName": "$(L, map_search_nearme)",
					"QuickFilters": []
				},
				"BusinessObjects": [
					{
						"Type": "Equipment",
						"Title": "$(L, dl_equip)",
						"Legend": "IconEquipment",
						"Target": {
							"EntitySet": "MyEquipments",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "$expand=EquipGeometries/Geometry&$filter=EquipGeometries/any(eg:sap.entityexists(eg/Geometry))",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"Geometry": "EquipGeometries/Geometry/GeometryValue",
							"Layer": "Equipment",
							"Properties": {
								"ID": "{EquipId}",
								"Title": "{EquipDesc}",
								"Subhead": "$(L, equipment_x, {EquipId})",
								"StatusText": "/SAPAssetManager/Rules/Maps/PriorityStatusText.js",
								"StatusImage": "/SAPAssetManager/Rules/Maps/PriorityBadge.js",
								"SubstatusText": "/SAPAssetManager/Rules/Maps/PrioritySubstatusText.js",
								"Tags": [
									"{EquipType}",
									"{EquipCategory}"
								],
								"BodyText": "/SAPAssetManager/Rules/Maps/MapEquipWorkCenter.js",
								"Directions": {
									"Enabled": "/SAPAssetManager/Rules/Maps/DirectionsButton/IsDirectionsButtonEnabled.js",
									"ButtonText": "$(L, map_info_panel_directions)"
								}
							},
							"Actions": [
								{
									"Title": "$(L, action_view_equip)",
									"Icon": "ActionView",
									"Type": "View",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Actions/Equipment/EquipmentDetailsNav.action",
										"Target": {
											"EntitySet": "MyEquipments",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=EquipId eq '{EquipId}'&$expand=MeasuringPoints,MeasuringPoints/MeasurementDocs,EquipDocuments,WorkOrderHeader,FunctionalLocation,SystemStatuses_Nav/SystemStatus_Nav,UserStatuses_Nav/UserStatus_Nav",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, take_reading)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/Equipment/EquipmentTakeReadingIsVisible.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Measurements/Points/MeasuringPointsDataEntryNavWrapper.js",
										"Target": {
											"EntitySet": "MyEquipments",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=EquipId eq '{EquipId}'&$expand=MeasuringPoints,MeasuringPoints/MeasurementDocs,EquipDocuments,WorkOrderHeader,FunctionalLocation",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, add_workorder)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/WorkOrders/EnableWorkOrderCreate.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/WorkOrders/CreateUpdate/WorkOrderCreateNav.js",
										"Target": {
											"EntitySet": "MyEquipments",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=EquipId eq '{EquipId}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, add_notification)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/Notifications/EnableNotificationCreate.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Notifications/CreateUpdate/NotificationCreateChangeSetNav.js",
										"Target": {
											"EntitySet": "MyEquipments",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=EquipId eq '{EquipId}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								}
							],
							"Symbol": {
								"marker": "/SAPAssetManager/Rules/Maps/Icons/EquipmentIcon.js",
								"lineColor": "A100C2",
								"fillColor": "A100C233",
								"lineWidth": 2,
								"onSelect": {
									"marker": "/SAPAssetManager/Rules/Maps/Icons/SelectedEquipmentIcon.js",
									"lineWidth": 4
								}
							}
						}
					},
					{
						"Type": "FunctionalLocation",
						"Title": "$(L, dl_floc)",
						"Legend": "IconFloc",
						"Target": {
							"EntitySet": "MyFunctionalLocations",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "$expand=FuncLocGeometries/Geometry&$filter=FuncLocGeometries/any(fg:sap.entityexists(fg/Geometry))",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"Geometry": "FuncLocGeometries/Geometry/GeometryValue",
							"Layer": "FunctionalLocation",
							"Properties": {
								"ID": "{FuncLocId}",
								"Title": "{FuncLocDesc}",
								"Subhead": "$(L, function_location_x, {FuncLocId})",
								"Tags": [
									"{FuncLocType}"
								],
								"BodyText": "/SAPAssetManager/Rules/Maps/MapFuncLocWorkCenter.js",
								"Directions": {
									"Enabled": "/SAPAssetManager/Rules/Maps/DirectionsButton/IsDirectionsButtonEnabled.js",
									"ButtonText": "$(L, map_info_panel_directions)"
								}
							},
							"Actions": [
								{
									"Title": "$(L, action_view_floc)",
									"Icon": "ActionView",
									"Type": "View",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Actions/FunctionalLocation/FunctionalLocationDetailsNav.action",
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=FuncLocIdIntern eq '{FuncLocIdIntern}'&$expand=WorkOrderHeader",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, take_reading)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/Equipment/EquipmentTakeReadingIsVisible.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Measurements/Points/MeasuringPointsDataEntryNavWrapper.js",
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=FuncLocIdIntern eq '{FuncLocIdIntern}'&$expand=WorkOrderHeader",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, add_workorder)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/WorkOrders/EnableWorkOrderCreate.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/WorkOrders/CreateUpdate/WorkOrderCreateNav.js",
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=FuncLocIdIntern eq '{FuncLocIdIntern}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, add_notification)",
									"Icon": "ActionAdd",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/Notifications/EnableNotificationCreate.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Notifications/CreateUpdate/NotificationCreateChangeSetNav.js",
										"Target": {
											"EntitySet": "MyFunctionalLocations",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$filter=FuncLocIdIntern eq '{FuncLocIdIntern}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								}
							],
							"Symbol": {
								"marker": "MarkerFunctionalLocation",
								"lineColor": "F58B00",
								"fillColor": "F58B0033",
								"lineWidth": 2,
								"onSelect": {
									"marker": "MarkerFunctionalLocationSelected",
									"lineWidth": 4
								}
							}
						}
					},
					{
						"Type": "Notification",
						"Title": "$(L, dl_notif)",
						"Legend": "IconNotification",
						"Target": {
							"EntitySet": "MyNotificationHeaders",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "$expand=NotifGeometries/Geometry&$filter=NotifGeometries/any(ng:sap.entityexists(ng/Geometry))",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"Geometry": "NotifGeometries/Geometry/GeometryValue",
							"Layer": "Notification",
							"Properties": {
								"ID": "{NotificationNumber}",
								"Title": "{NotificationDescription}",
								"Subhead": "$(L, notification_x, {NotificationNumber})",
								"StatusText": "/SAPAssetManager/Rules/Maps/PriorityStatusText.js",
								"SubstatusText": "/SAPAssetManager/Rules/Maps/PrioritySubstatusText.js",
								"StatusImage": "/SAPAssetManager/Rules/Maps/PriorityBadge.js",
								"Tags": [
									"/SAPAssetManager/Rules/Maps/MapNotificationStatus.js"
								],
								"BodyText": "/SAPAssetManager/Rules/Maps/MapNotificationWorkCenter.js",
								"Footnote": "/SAPAssetManager/Rules/Maps/MapNotificationDueDate.js",
								"FormatRule": "",
								"Priority": "{Priority}",
								"Directions": {
									"Enabled": "/SAPAssetManager/Rules/Maps/DirectionsButton/IsDirectionsButtonEnabled.js",
									"ButtonText": "$(L, map_info_panel_directions)"
								}
							},
							"Actions": [
								{
									"Title": "$(L, action_view_notif)",
									"Icon": "ActionView",
									"Type": "View",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/Notifications/EnableNotificationCreate.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Notifications/Details/NotificationDetailsNav.js",
										"Target": {
											"EntitySet": "MyNotificationHeaders",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/Notifications/Map/NotificationDetailsFromMapQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, action_create_notif)",
									"Icon": "ActionAdd",
									"Type": "Create",
									"IsVisible": "/SAPAssetManager/Rules/UserAuthorizations/Notifications/EnableNotificationEdit.js",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Maps/MapNotificationCreateNav.js",
										"Target": {
											"EntitySet": "MyNotificationHeaders",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$expand=NotifMobileStatus_Nav,NotifDocuments&$filter=NotificationNumber eq '{NotificationNumber}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								},
								{
									"Title": "$(L, action_update_notif)",
									"Icon": "ActionEdit",
									"Type": "Update",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/Notifications/NotificationUpdateNav.js",
										"Target": {
											"EntitySet": "MyNotificationHeaders",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "$expand=NotifPriority&$filter=NotificationNumber eq '{NotificationNumber}'",
											"Properties": [],
											"KeyProperties": []
										}
									}
								}
							],
							"Symbol": {
								"marker": "/SAPAssetManager/Rules/Maps/Icons/NotificationIcon.js",
								"lineColor": "04ACA7",
								"fillColor": "04ACA733",
								"lineWidth": 2,
								"onSelect": {
									"marker": "/SAPAssetManager/Rules/Maps/Icons/SelectedNotificationIcon.js",
									"lineWidth": 4
								}
							}
						}
					},
					{
						"Type": "Job",
						"Title": "$(L,workorders)",
						"Legend": "IconWorkOrder",
						"Target": {
							"EntitySet": "MyWorkOrderHeaders",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "/SAPAssetManager/Rules/Maps/WorkOrders/MapWorkOrdersQueryOptions.js",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"_Type": "Fragment",
							"Fragment": "/SAPAssetManager/Pages/Fragments/Map/WorkOrders/WorkOrderBusinessObjectScheme.fragment",
							"Properties": {
								"Properties": {
									"Tags": [
										"{OrderType}",
										"/SAPAssetManager/Rules/Maps/MapWorkOrderStatus.js"
									],
									"Footnote": "/SAPAssetManager/Rules/Maps/MapWorkOrderDueDate.js"
								},
								"Actions": [
									"/SAPAssetManager/Pages/Fragments/Map/WorkOrders/ViewWorkOrder.fragment",
									"/SAPAssetManager/Pages/Fragments/Map/WorkOrders/CreateWorkOrder.fragment",
									"/SAPAssetManager/Pages/Fragments/Map/WorkOrders/UpdateWorkOrder.fragment",
									"/SAPAssetManager/Pages/Fragments/Map/WorkOrders/FavoriteWorkOrder.fragment"
								]
							}
						}
					},
					{
						"Type": "Route",
						"DependsOn": "RouteStop",
						"Title": "$(L, fow_dl_routes)",
						"Legend": "IconRoute",
						"Target": {
							"EntitySet": "MyRoutes",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "$expand=Stops,WorkOrder/OrderMobileStatus_Nav,WorkOrder/WOPriority&$filter=Stops/FuncLoc/FuncLocGeometries/any(fg:sap.entityexists(fg/Geometry)) or Stops/Equipment/EquipGeometries/any(eg:sap.entityexists(eg/Geometry))",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"Geometry": "",
							"Layer": "Route",
							"Properties": {
								"ID": "{RouteID}",
								"Title": "{Description}",
								"Subhead": "$(L, fow_route_with_route_id, {RouteID})",
								"StatusText": "/SAPAssetManager/Rules/Maps/FOW/Routes/RoutePriorityStatusText.js",
								"StatusImage": "/SAPAssetManager/Rules/Maps/FOW/Routes/RoutePriorityBadge.js",
								"SubstatusText": "/SAPAssetManager/Rules/Maps/FOW/Routes/RoutePrioritySubstatusText.js",
								"Tags": [
									"/SAPAssetManager/Rules/Maps/FOW/Routes/RouteTags.js"
								],
								"BodyText": "/SAPAssetManager/Rules/FOW/Routes/ListView/RouteListStopCountCaption.js",
								"Footnote": "/SAPAssetManager/Rules/FOW/DateTime/RouteDueDate.js",
								"FormatRule": "",
								"DateProperties": {
									"DueDate": "/SAPAssetManager/Rules/FOW/DateTime/RouteDueDateInDateFormat.js",
									"DateFormat": "MM-dd-yyyy"
								},
								"Directions": {
									"Enabled": "/SAPAssetManager/Rules/Maps/DirectionsButton/IsDirectionsButtonEnabled.js",
									"ButtonText": "$(L, map_info_panel_directions)"
								}
							},
							"DependsOn": "RouteStop",
							"Actions": [
								{
									"Title": "$(L, fow_map_view_route_details)",
									"Icon": "ActionView",
									"Type": "View",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/FOW/Routes/RouteDetailsNav.js",
										"Target": {
											"EntitySet": "MyRoutes",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/Maps/FOW/Routes/RouteDetailsMapNavQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										}
									}
								}
							],
							"Symbol": {
								"lineColor": "4BC3F3",
								"lineWidth": 5,
								"lineStyle": "solid",
								"onSelect": {
									"lineColor": "4BC3F3",
									"lineWidth": 10,
									"lineStyle": "solid"
								}
							}
						}
					},
					{
						"Type": "RouteStop",
						"Title": "$(L, fow_dl_stops)",
						"Legend": "IconRouteStop",
						"Target": {
							"EntitySet": "MyRouteStops",
							"Service": "/SAPAssetManager/Services/AssetManager.service",
							"QueryOptions": "$expand=Operation/OperationMobileStatus_Nav,FuncLoc/FuncLocGeometries/Geometry,Equipment/EquipGeometries/Geometry,TechObjects&$filter=FuncLoc/FuncLocGeometries/any(fg:sap.entityexists(fg/Geometry)) or Equipment/EquipGeometries/any(eg:sap.entityexists(eg/Geometry))",
							"Properties": [],
							"KeyProperties": []
						},
						"Enable": true,
						"ObjectScheme": {
							"Geometry": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopGeometry.js",
							"Layer": "RouteStop",
							"Properties": {
								"ID": "{RouteID}{StopID}",
								"RouteID": "{RouteID}",
								"StopID": "{StopID}",
								"Title": "{Description}",
								"Subhead": "$(L, fow_stop_with_stop_id, {StopID})",
								"Tags": [
									"/SAPAssetManager/Rules/Maps/FOW/Stops/StopTags.js"
								],
								"BodyText": "/SAPAssetManager/Rules/FOW/Routes/Stops/StopListAssetCountCaption.js",
								"Footnote": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopFootnote.js",
								"Directions": {
									"Enabled": "/SAPAssetManager/Rules/Maps/DirectionsButton/IsDirectionsButtonEnabled.js",
									"ButtonText": "$(L, map_info_panel_directions)"
								}
							},
							"GroupOf": {
								"Equipment": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopEquipIds.js",
								"FunctionalLocation": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopFuncLocIds.js"
							},
							"Actions": [
								{
									"Title": "$(L, fow_map_view_stop_details)",
									"Icon": "ActionView",
									"Type": "View",
									"CallbackInfo": {
										"Action": "/SAPAssetManager/Rules/FOW/Routes/Stops/StopDetailsNav.js",
										"Target": {
											"EntitySet": "MyRouteStops",
											"Service": "/SAPAssetManager/Services/AssetManager.service",
											"QueryOptions": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopDetailsMapNavQueryOptions.js",
											"Properties": [],
											"KeyProperties": []
										}
									}
								}
							],
							"Symbol": {
								"marker": "MarkerGroup",
								"Composite": {
									"Text": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopAssetNumber.js",
									"TextColor": "FFFFFF"
								},
								"onSelect": {
									"marker": "MarkerGroupSelected",
									"Composite": {
										"Text": "/SAPAssetManager/Rules/Maps/FOW/Stops/StopAssetNumber.js",
										"TextColor": "FFFFFF",
										"FontSize": 18
									}
								}
							}
						}
					}
				]
			}
		}
	],
	"_Type": "Page",
	"_Name": "RouteMapDetailsPage",
	"PrefersLargeCaption": true
}